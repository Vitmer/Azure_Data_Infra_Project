[0m[1mdata.azurerm_client_config.current: Reading...[0m[0m
[0m[1mdata.azurerm_client_config.current: Read complete after 0s [id=Y2xpZW50Q29uZmlncy9jbGllbnRJZD1mYTVmOTg4Mi1iZTc4LTQ3MGYtYTgxOS1lNGZjMDk2NzNlYTE7b2JqZWN0SWQ9OTE2M2Y0NmQtODJiOC00ZGQ1LWFmYzAtZDlmOTEyNDc0YTNkO3N1YnNjcmlwdGlvbklkPWIwY2E0Y2UxLTg2MjItNDVkZS1iZDNkLTRmYzYwNmM3ZmE2OTt0ZW5hbnRJZD1hOGViN2VmZS0zMDA2LTQ3NjgtYTdjYS1iZmMyNzQ0ZWM1ODU=][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # azurerm_backup_policy_vm.vm_backup_policy[0m will be created
[0m  [32m+[0m[0m resource "azurerm_backup_policy_vm" "vm_backup_policy" {
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m instant_restore_retention_days = (known after apply)
      [32m+[0m[0m name                           = "daily-backup-policy"
      [32m+[0m[0m policy_type                    = "V1"
      [32m+[0m[0m recovery_vault_name            = "backup-vault"
      [32m+[0m[0m resource_group_name            = "rg-azure-data-infra"
      [32m+[0m[0m timezone                       = "UTC"

      [32m+[0m[0m backup {
          [32m+[0m[0m frequency = "Daily"
          [32m+[0m[0m time      = "23:00"
        }

      [32m+[0m[0m retention_daily {
          [32m+[0m[0m count = 7
        }
    }

[1m  # azurerm_backup_protected_vm.protected_vm_private[0m will be created
[0m  [32m+[0m[0m resource "azurerm_backup_protected_vm" "protected_vm_private" {
      [32m+[0m[0m backup_policy_id    = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m protection_state    = (known after apply)
      [32m+[0m[0m recovery_vault_name = "backup-vault"
      [32m+[0m[0m resource_group_name = "rg-azure-data-infra"
      [32m+[0m[0m source_vm_id        = (known after apply)
    }

[1m  # azurerm_backup_protected_vm.protected_vm_public[0m will be created
[0m  [32m+[0m[0m resource "azurerm_backup_protected_vm" "protected_vm_public" {
      [32m+[0m[0m backup_policy_id    = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m protection_state    = (known after apply)
      [32m+[0m[0m recovery_vault_name = "backup-vault"
      [32m+[0m[0m resource_group_name = "rg-azure-data-infra"
      [32m+[0m[0m source_vm_id        = (known after apply)
    }

[1m  # azurerm_bastion_host.bastion[0m will be created
[0m  [32m+[0m[0m resource "azurerm_bastion_host" "bastion" {
      [32m+[0m[0m copy_paste_enabled     = true
      [32m+[0m[0m dns_name               = (known after apply)
      [32m+[0m[0m file_copy_enabled      = false
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_connect_enabled     = false
      [32m+[0m[0m location               = "westeurope"
      [32m+[0m[0m name                   = "bastion-host"
      [32m+[0m[0m resource_group_name    = "rg-azure-data-infra"
      [32m+[0m[0m scale_units            = 2
      [32m+[0m[0m shareable_link_enabled = false
      [32m+[0m[0m sku                    = "Standard"
      [32m+[0m[0m tunneling_enabled      = false

      [32m+[0m[0m ip_configuration {
          [32m+[0m[0m name                 = "bastion-ip-config"
          [32m+[0m[0m public_ip_address_id = (known after apply)
          [32m+[0m[0m subnet_id            = (known after apply)
        }
    }

[1m  # azurerm_data_factory.example[0m will be created
[0m  [32m+[0m[0m resource "azurerm_data_factory" "example" {
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m location               = "westeurope"
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m public_network_enabled = true
      [32m+[0m[0m resource_group_name    = "rg-azure-data-infra"

      [32m+[0m[0m identity {
          [32m+[0m[0m principal_id = (known after apply)
          [32m+[0m[0m tenant_id    = (known after apply)
          [32m+[0m[0m type         = "SystemAssigned"
        }
    }

[1m  # azurerm_data_factory_dataset_azure_blob.example[0m will be created
[0m  [32m+[0m[0m resource "azurerm_data_factory_dataset_azure_blob" "example" {
      [32m+[0m[0m data_factory_id          = (known after apply)
      [32m+[0m[0m dynamic_filename_enabled = false
      [32m+[0m[0m dynamic_path_enabled     = false
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m linked_service_name      = "blob-service-link"
      [32m+[0m[0m name                     = "example-blob-dataset"
      [32m+[0m[0m path                     = "example-folder/example-file.csv"
    }

[1m  # azurerm_data_factory_dataset_sql_server_table.analytics_synapse_dataset[0m will be created
[0m  [32m+[0m[0m resource "azurerm_data_factory_dataset_sql_server_table" "analytics_synapse_dataset" {
      [32m+[0m[0m data_factory_id     = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m linked_service_name = "sqlserver-link"
      [32m+[0m[0m name                = "analytics-dataset"
      [32m+[0m[0m table_name          = "etl_output_table"
    }

[1m  # azurerm_data_factory_dataset_sql_server_table.synapse_dataset[0m will be created
[0m  [32m+[0m[0m resource "azurerm_data_factory_dataset_sql_server_table" "synapse_dataset" {
      [32m+[0m[0m data_factory_id     = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m linked_service_name = "sqlserver-link"
      [32m+[0m[0m name                = "synapse-dataset"
      [32m+[0m[0m table_name          = "etl_output_table"
    }

[1m  # azurerm_data_factory_linked_service_azure_blob_storage.blob_service_link[0m will be created
[0m  [32m+[0m[0m resource "azurerm_data_factory_linked_service_azure_blob_storage" "blob_service_link" {
      [32m+[0m[0m connection_string    = (sensitive value)
      [32m+[0m[0m data_factory_id      = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m name                 = "blob-service-link"
      [32m+[0m[0m use_managed_identity = false
    }

[1m  # azurerm_data_factory_linked_service_azure_blob_storage.data_lake_service_link[0m will be created
[0m  [32m+[0m[0m resource "azurerm_data_factory_linked_service_azure_blob_storage" "data_lake_service_link" {
      [32m+[0m[0m connection_string    = (sensitive value)
      [32m+[0m[0m data_factory_id      = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m name                 = "data-lake-service-link"
      [32m+[0m[0m use_managed_identity = false
    }

[1m  # azurerm_data_factory_linked_service_sql_server.example[0m will be created
[0m  [32m+[0m[0m resource "azurerm_data_factory_linked_service_sql_server" "example" {
      [32m+[0m[0m connection_string = (known after apply)
      [32m+[0m[0m data_factory_id   = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m name              = "sqlserver-link"
    }

[1m  # azurerm_data_factory_linked_service_synapse.synapse_link[0m will be created
[0m  [32m+[0m[0m resource "azurerm_data_factory_linked_service_synapse" "synapse_link" {
      [32m+[0m[0m connection_string = (known after apply)
      [32m+[0m[0m data_factory_id   = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m name              = "synapse-linked-service"
    }

[1m  # azurerm_data_factory_pipeline.databricks_etl[0m will be created
[0m  [32m+[0m[0m resource "azurerm_data_factory_pipeline" "databricks_etl" {
      [32m+[0m[0m activities_json = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m inputs        = [
                      [32m+[0m[0m {
                          [32m+[0m[0m name = "data-lake-dataset"
                        },
                    ]
                  [32m+[0m[0m name          = "TransformData"
                  [32m+[0m[0m notebook_task = {
                      [32m+[0m[0m notebook_path = "/Users/example@databricks.com/ETLNotebook"
                    }
                  [32m+[0m[0m outputs       = [
                      [32m+[0m[0m {
                          [32m+[0m[0m name = "synapse-dataset"
                        },
                    ]
                  [32m+[0m[0m type          = "DatabricksNotebook"
                },
            ]
        )
      [32m+[0m[0m data_factory_id = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m name            = "databricks-etl-pipeline"
    }

[1m  # azurerm_data_factory_pipeline.etl_pipeline[0m will be created
[0m  [32m+[0m[0m resource "azurerm_data_factory_pipeline" "etl_pipeline" {
      [32m+[0m[0m activities_json = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m inputs  = [
                      [32m+[0m[0m {
                          [32m+[0m[0m name = "example-blob-dataset"
                        },
                    ]
                  [32m+[0m[0m name    = "CopyBlobToDataLake"
                  [32m+[0m[0m outputs = [
                      [32m+[0m[0m {
                          [32m+[0m[0m name = "data-lake-dataset"
                        },
                    ]
                  [32m+[0m[0m type    = "Copy"
                },
            ]
        )
      [32m+[0m[0m data_factory_id = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m name            = "etl-pipeline"
    }

[1m  # azurerm_databricks_workspace.example[0m will be created
[0m  [32m+[0m[0m resource "azurerm_databricks_workspace" "example" {
      [32m+[0m[0m customer_managed_key_enabled          = false
      [32m+[0m[0m disk_encryption_set_id                = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m infrastructure_encryption_enabled     = false
      [32m+[0m[0m location                              = "westeurope"
      [32m+[0m[0m managed_disk_identity                 = (known after apply)
      [32m+[0m[0m managed_resource_group_id             = (known after apply)
      [32m+[0m[0m managed_resource_group_name           = (known after apply)
      [32m+[0m[0m name                                  = "databricks-workspace"
      [32m+[0m[0m network_security_group_rules_required = (known after apply)
      [32m+[0m[0m public_network_access_enabled         = true
      [32m+[0m[0m resource_group_name                   = "rg-azure-data-infra"
      [32m+[0m[0m sku                                   = "premium"
      [32m+[0m[0m storage_account_identity              = (known after apply)
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "environment" = "production"
          [32m+[0m[0m "project"     = "data-infra-project"
        }
      [32m+[0m[0m workspace_id                          = (known after apply)
      [32m+[0m[0m workspace_url                         = (known after apply)

      [32m+[0m[0m custom_parameters (known after apply)
    }

[1m  # azurerm_key_vault.key_vault[0m will be created
[0m  [32m+[0m[0m resource "azurerm_key_vault" "key_vault" {
      [32m+[0m[0m access_policy                 = [
          [32m+[0m[0m {
              [32m+[0m[0m object_id          = "9163f46d-82b8-4dd5-afc0-d9f912474a3d"
              [32m+[0m[0m secret_permissions = [
                  [32m+[0m[0m "Get",
                  [32m+[0m[0m "List",
                  [32m+[0m[0m "Set",
                  [32m+[0m[0m "Delete",
                ]
              [32m+[0m[0m tenant_id          = "a8eb7efe-3006-4768-a7ca-bfc2744ec585"
            },
        ]
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m location                      = "westeurope"
      [32m+[0m[0m name                          = "kv-centralized"
      [32m+[0m[0m public_network_access_enabled = true
      [32m+[0m[0m resource_group_name           = "rg-azure-data-infra"
      [32m+[0m[0m sku_name                      = "standard"
      [32m+[0m[0m soft_delete_retention_days    = 30
      [32m+[0m[0m tags                          = {
          [32m+[0m[0m "Environment" = "Production"
          [32m+[0m[0m "Owner"       = "Azure Data Infra Project"
        }
      [32m+[0m[0m tenant_id                     = "a8eb7efe-3006-4768-a7ca-bfc2744ec585"
      [32m+[0m[0m vault_uri                     = (known after apply)

      [32m+[0m[0m network_acls (known after apply)
    }

[1m  # azurerm_key_vault_secret.example_secret[0m will be created
[0m  [32m+[0m[0m resource "azurerm_key_vault_secret" "example_secret" {
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m key_vault_id            = (known after apply)
      [32m+[0m[0m name                    = (known after apply)
      [32m+[0m[0m resource_id             = (known after apply)
      [32m+[0m[0m resource_versionless_id = (known after apply)
      [32m+[0m[0m value                   = (sensitive value)
      [32m+[0m[0m version                 = (known after apply)
      [32m+[0m[0m versionless_id          = (known after apply)
    }

[1m  # azurerm_linux_virtual_machine.private_vm[0m will be created
[0m  [32m+[0m[0m resource "azurerm_linux_virtual_machine" "private_vm" {
      [32m+[0m[0m admin_username                  = "adminuser"
      [32m+[0m[0m allow_extension_operations      = true
      [32m+[0m[0m computer_name                   = (known after apply)
      [32m+[0m[0m disable_password_authentication = true
      [32m+[0m[0m extensions_time_budget          = "PT1H30M"
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m location                        = "westeurope"
      [32m+[0m[0m max_bid_price                   = -1
      [32m+[0m[0m name                            = "vm-private"
      [32m+[0m[0m network_interface_ids           = (known after apply)
      [32m+[0m[0m patch_assessment_mode           = "ImageDefault"
      [32m+[0m[0m patch_mode                      = "ImageDefault"
      [32m+[0m[0m platform_fault_domain           = -1
      [32m+[0m[0m priority                        = "Regular"
      [32m+[0m[0m private_ip_address              = (known after apply)
      [32m+[0m[0m private_ip_addresses            = (known after apply)
      [32m+[0m[0m provision_vm_agent              = true
      [32m+[0m[0m public_ip_address               = (known after apply)
      [32m+[0m[0m public_ip_addresses             = (known after apply)
      [32m+[0m[0m resource_group_name             = "rg-azure-data-infra"
      [32m+[0m[0m size                            = "Standard_B1s"
      [32m+[0m[0m virtual_machine_id              = (known after apply)

      [32m+[0m[0m admin_ssh_key {
          [32m+[0m[0m public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCylTY738skkqFPRPK3O/Kq3jSYCjJBCtjb+0QHuta83Na5ufMkkfHOfG7DIPDvEDvhXikzb8kOBOFPoWgnYV9htt5cHiqN9ujhZhnwAsHOyWW6GBdUq0T9fh1KIiOn3c5CS2Z2y1Q79T/YIO+YW+tZtIfJSfNLoocNazildBr82dj3Brjwg6BT98IvVu3H2Kf+NcXHQ77kt5fLGrsFuVCCsIrary8qkePnl7efNNPQx/ZDXevnNP1ioV7G5UUTv8p2dDh0n3gstdTdXVeYacKw3jBO0MPjAsqMcAGLRs+gTkPrmyhGaQluw203sCRaxVdML+2/ymdNRUyNOhFkoRASqbWtusyjbv2sbFv90D2Go0mUZ0LJYtzg0IpxsVvCxbVK1e3IzlFsxWrAXIxtD6SQNsy7zLopYy2l2T3lJ94DWYh655LWBGPTtuzPDiaStbKJfYtkSS5bXRe8cAl28K8TMyNvCHuwJAg/aSS+YDL9NDEfEewzoqFDe0rsJKjdcH2LX6cTIyVynGJWovDHyR2GfNtFty3PZALePk78EP2rQastV9JD040sqVRnBqZDTf+lV16HbrLHyBLBRqyF6wu3IURhLOdMdyM6lMmS4sxwlnoyBuhSAsR9yYbAayko1JOh8wf3AbWP7awk4A8hx74CXIoyShd7wMnCKFpOuRWriw== vitmervs@gmail.com
            EOT
          [32m+[0m[0m username   = "adminuser"
        }

      [32m+[0m[0m os_disk {
          [32m+[0m[0m caching                   = "ReadWrite"
          [32m+[0m[0m disk_size_gb              = (known after apply)
          [32m+[0m[0m name                      = (known after apply)
          [32m+[0m[0m storage_account_type      = "Standard_LRS"
          [32m+[0m[0m write_accelerator_enabled = false
        }

      [32m+[0m[0m source_image_reference {
          [32m+[0m[0m offer     = "UbuntuServer"
          [32m+[0m[0m publisher = "Canonical"
          [32m+[0m[0m sku       = "18.04-LTS"
          [32m+[0m[0m version   = "latest"
        }

      [32m+[0m[0m termination_notification (known after apply)
    }

[1m  # azurerm_linux_virtual_machine.public_vm[0m will be created
[0m  [32m+[0m[0m resource "azurerm_linux_virtual_machine" "public_vm" {
      [32m+[0m[0m admin_username                  = "adminuser"
      [32m+[0m[0m allow_extension_operations      = true
      [32m+[0m[0m computer_name                   = (known after apply)
      [32m+[0m[0m disable_password_authentication = true
      [32m+[0m[0m extensions_time_budget          = "PT1H30M"
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m location                        = "westeurope"
      [32m+[0m[0m max_bid_price                   = -1
      [32m+[0m[0m name                            = "vm-public"
      [32m+[0m[0m network_interface_ids           = (known after apply)
      [32m+[0m[0m patch_assessment_mode           = "ImageDefault"
      [32m+[0m[0m patch_mode                      = "ImageDefault"
      [32m+[0m[0m platform_fault_domain           = -1
      [32m+[0m[0m priority                        = "Regular"
      [32m+[0m[0m private_ip_address              = (known after apply)
      [32m+[0m[0m private_ip_addresses            = (known after apply)
      [32m+[0m[0m provision_vm_agent              = true
      [32m+[0m[0m public_ip_address               = (known after apply)
      [32m+[0m[0m public_ip_addresses             = (known after apply)
      [32m+[0m[0m resource_group_name             = "rg-azure-data-infra"
      [32m+[0m[0m size                            = "Standard_B1s"
      [32m+[0m[0m virtual_machine_id              = (known after apply)

      [32m+[0m[0m admin_ssh_key {
          [32m+[0m[0m public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCylTY738skkqFPRPK3O/Kq3jSYCjJBCtjb+0QHuta83Na5ufMkkfHOfG7DIPDvEDvhXikzb8kOBOFPoWgnYV9htt5cHiqN9ujhZhnwAsHOyWW6GBdUq0T9fh1KIiOn3c5CS2Z2y1Q79T/YIO+YW+tZtIfJSfNLoocNazildBr82dj3Brjwg6BT98IvVu3H2Kf+NcXHQ77kt5fLGrsFuVCCsIrary8qkePnl7efNNPQx/ZDXevnNP1ioV7G5UUTv8p2dDh0n3gstdTdXVeYacKw3jBO0MPjAsqMcAGLRs+gTkPrmyhGaQluw203sCRaxVdML+2/ymdNRUyNOhFkoRASqbWtusyjbv2sbFv90D2Go0mUZ0LJYtzg0IpxsVvCxbVK1e3IzlFsxWrAXIxtD6SQNsy7zLopYy2l2T3lJ94DWYh655LWBGPTtuzPDiaStbKJfYtkSS5bXRe8cAl28K8TMyNvCHuwJAg/aSS+YDL9NDEfEewzoqFDe0rsJKjdcH2LX6cTIyVynGJWovDHyR2GfNtFty3PZALePk78EP2rQastV9JD040sqVRnBqZDTf+lV16HbrLHyBLBRqyF6wu3IURhLOdMdyM6lMmS4sxwlnoyBuhSAsR9yYbAayko1JOh8wf3AbWP7awk4A8hx74CXIoyShd7wMnCKFpOuRWriw== vitmervs@gmail.com
            EOT
          [32m+[0m[0m username   = "adminuser"
        }

      [32m+[0m[0m os_disk {
          [32m+[0m[0m caching                   = "ReadWrite"
          [32m+[0m[0m disk_size_gb              = (known after apply)
          [32m+[0m[0m name                      = (known after apply)
          [32m+[0m[0m storage_account_type      = "Standard_LRS"
          [32m+[0m[0m write_accelerator_enabled = false
        }

      [32m+[0m[0m source_image_reference {
          [32m+[0m[0m offer     = "UbuntuServer"
          [32m+[0m[0m publisher = "Canonical"
          [32m+[0m[0m sku       = "18.04-LTS"
          [32m+[0m[0m version   = "latest"
        }

      [32m+[0m[0m termination_notification (known after apply)
    }

[1m  # azurerm_nat_gateway.nat_gateway[0m will be created
[0m  [32m+[0m[0m resource "azurerm_nat_gateway" "nat_gateway" {
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m idle_timeout_in_minutes = 4
      [32m+[0m[0m location                = "westeurope"
      [32m+[0m[0m name                    = "nat-gateway"
      [32m+[0m[0m resource_group_name     = "rg-azure-data-infra"
      [32m+[0m[0m resource_guid           = (known after apply)
      [32m+[0m[0m sku_name                = "Standard"
    }

[1m  # azurerm_nat_gateway_public_ip_association.nat_gateway_assoc[0m will be created
[0m  [32m+[0m[0m resource "azurerm_nat_gateway_public_ip_association" "nat_gateway_assoc" {
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m nat_gateway_id       = (known after apply)
      [32m+[0m[0m public_ip_address_id = (known after apply)
    }

[1m  # azurerm_network_interface.private_nic[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_interface" "private_nic" {
      [32m+[0m[0m applied_dns_servers           = (known after apply)
      [32m+[0m[0m dns_servers                   = (known after apply)
      [32m+[0m[0m enable_accelerated_networking = false
      [32m+[0m[0m enable_ip_forwarding          = false
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m internal_dns_name_label       = (known after apply)
      [32m+[0m[0m internal_domain_name_suffix   = (known after apply)
      [32m+[0m[0m location                      = "westeurope"
      [32m+[0m[0m mac_address                   = (known after apply)
      [32m+[0m[0m name                          = "private-nic"
      [32m+[0m[0m private_ip_address            = (known after apply)
      [32m+[0m[0m private_ip_addresses          = (known after apply)
      [32m+[0m[0m resource_group_name           = "rg-azure-data-infra"
      [32m+[0m[0m virtual_machine_id            = (known after apply)

      [32m+[0m[0m ip_configuration {
          [32m+[0m[0m gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          [32m+[0m[0m name                                               = "private-ip-config"
          [32m+[0m[0m primary                                            = (known after apply)
          [32m+[0m[0m private_ip_address                                 = (known after apply)
          [32m+[0m[0m private_ip_address_allocation                      = "Dynamic"
          [32m+[0m[0m private_ip_address_version                         = "IPv4"
          [32m+[0m[0m subnet_id                                          = (known after apply)
        }
    }

[1m  # azurerm_network_interface.public_nic[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_interface" "public_nic" {
      [32m+[0m[0m applied_dns_servers           = (known after apply)
      [32m+[0m[0m dns_servers                   = (known after apply)
      [32m+[0m[0m enable_accelerated_networking = false
      [32m+[0m[0m enable_ip_forwarding          = false
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m internal_dns_name_label       = (known after apply)
      [32m+[0m[0m internal_domain_name_suffix   = (known after apply)
      [32m+[0m[0m location                      = "westeurope"
      [32m+[0m[0m mac_address                   = (known after apply)
      [32m+[0m[0m name                          = "public-nic"
      [32m+[0m[0m private_ip_address            = (known after apply)
      [32m+[0m[0m private_ip_addresses          = (known after apply)
      [32m+[0m[0m resource_group_name           = "rg-azure-data-infra"
      [32m+[0m[0m virtual_machine_id            = (known after apply)

      [32m+[0m[0m ip_configuration {
          [32m+[0m[0m gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          [32m+[0m[0m name                                               = "public-ip-config"
          [32m+[0m[0m primary                                            = (known after apply)
          [32m+[0m[0m private_ip_address                                 = (known after apply)
          [32m+[0m[0m private_ip_address_allocation                      = "Dynamic"
          [32m+[0m[0m private_ip_address_version                         = "IPv4"
          [32m+[0m[0m public_ip_address_id                               = (known after apply)
          [32m+[0m[0m subnet_id                                          = (known after apply)
        }
    }

[1m  # azurerm_network_security_group.nsg_public[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_security_group" "nsg_public" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "westeurope"
      [32m+[0m[0m name                = "nsg-public"
      [32m+[0m[0m resource_group_name = "rg-azure-data-infra"
      [32m+[0m[0m security_rule       = [
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "*"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "22"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "Allow-SSH"
              [32m+[0m[0m priority                                   = 1001
              [32m+[0m[0m protocol                                   = "Tcp"
              [32m+[0m[0m source_address_prefix                      = "*"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "*"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "3389"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "Allow-RDP"
              [32m+[0m[0m priority                                   = 1002
              [32m+[0m[0m protocol                                   = "Tcp"
              [32m+[0m[0m source_address_prefix                      = "*"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "Internet"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "*"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Outbound"
              [32m+[0m[0m name                                       = "Allow-NAT-Outbound"
              [32m+[0m[0m priority                                   = 1100
              [32m+[0m[0m protocol                                   = "Tcp"
              [32m+[0m[0m source_address_prefix                      = "*"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
    }

[1m  # azurerm_public_ip.bastion_ip[0m will be created
[0m  [32m+[0m[0m resource "azurerm_public_ip" "bastion_ip" {
      [32m+[0m[0m allocation_method       = "Static"
      [32m+[0m[0m ddos_protection_mode    = "VirtualNetworkInherited"
      [32m+[0m[0m fqdn                    = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m idle_timeout_in_minutes = 4
      [32m+[0m[0m ip_address              = (known after apply)
      [32m+[0m[0m ip_version              = "IPv4"
      [32m+[0m[0m location                = "westeurope"
      [32m+[0m[0m name                    = "bastion-ip"
      [32m+[0m[0m resource_group_name     = "rg-azure-data-infra"
      [32m+[0m[0m sku                     = "Standard"
      [32m+[0m[0m sku_tier                = "Regional"
    }

[1m  # azurerm_public_ip.nat_gateway_ip[0m will be created
[0m  [32m+[0m[0m resource "azurerm_public_ip" "nat_gateway_ip" {
      [32m+[0m[0m allocation_method       = "Static"
      [32m+[0m[0m ddos_protection_mode    = "VirtualNetworkInherited"
      [32m+[0m[0m fqdn                    = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m idle_timeout_in_minutes = 4
      [32m+[0m[0m ip_address              = (known after apply)
      [32m+[0m[0m ip_version              = "IPv4"
      [32m+[0m[0m location                = "westeurope"
      [32m+[0m[0m name                    = "nat-gateway-ip"
      [32m+[0m[0m resource_group_name     = "rg-azure-data-infra"
      [32m+[0m[0m sku                     = "Standard"
      [32m+[0m[0m sku_tier                = "Regional"
    }

[1m  # azurerm_public_ip.public_vm_ip[0m will be created
[0m  [32m+[0m[0m resource "azurerm_public_ip" "public_vm_ip" {
      [32m+[0m[0m allocation_method       = "Static"
      [32m+[0m[0m ddos_protection_mode    = "VirtualNetworkInherited"
      [32m+[0m[0m fqdn                    = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m idle_timeout_in_minutes = 4
      [32m+[0m[0m ip_address              = (known after apply)
      [32m+[0m[0m ip_version              = "IPv4"
      [32m+[0m[0m location                = "westeurope"
      [32m+[0m[0m name                    = "public-vm-ip"
      [32m+[0m[0m resource_group_name     = "rg-azure-data-infra"
      [32m+[0m[0m sku                     = "Standard"
      [32m+[0m[0m sku_tier                = "Regional"
    }

[1m  # azurerm_recovery_services_vault.backup_vault[0m will be created
[0m  [32m+[0m[0m resource "azurerm_recovery_services_vault" "backup_vault" {
      [32m+[0m[0m classic_vmware_replication_enabled = (known after apply)
      [32m+[0m[0m cross_region_restore_enabled       = false
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m immutability                       = (known after apply)
      [32m+[0m[0m location                           = "westeurope"
      [32m+[0m[0m name                               = "backup-vault"
      [32m+[0m[0m public_network_access_enabled      = true
      [32m+[0m[0m resource_group_name                = "rg-azure-data-infra"
      [32m+[0m[0m sku                                = "Standard"
      [32m+[0m[0m soft_delete_enabled                = true
      [32m+[0m[0m storage_mode_type                  = "GeoRedundant"
    }

[1m  # azurerm_resource_group.rg[0m will be created
[0m  [32m+[0m[0m resource "azurerm_resource_group" "rg" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m location = "westeurope"
      [32m+[0m[0m name     = "rg-azure-data-infra"
    }

[1m  # azurerm_role_assignment.databricks_admin[0m will be created
[0m  [32m+[0m[0m resource "azurerm_role_assignment" "databricks_admin" {
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m name                             = (known after apply)
      [32m+[0m[0m principal_id                     = "9163f46d-82b8-4dd5-afc0-d9f912474a3d"
      [32m+[0m[0m principal_type                   = (known after apply)
      [32m+[0m[0m role_definition_id               = (known after apply)
      [32m+[0m[0m role_definition_name             = "Contributor"
      [32m+[0m[0m scope                            = (known after apply)
      [32m+[0m[0m skip_service_principal_aad_check = (known after apply)
    }

[1m  # azurerm_role_assignment.example[0m will be created
[0m  [32m+[0m[0m resource "azurerm_role_assignment" "example" {
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m name                             = (known after apply)
      [32m+[0m[0m principal_id                     = "9163f46d-82b8-4dd5-afc0-d9f912474a3d"
      [32m+[0m[0m principal_type                   = (known after apply)
      [32m+[0m[0m role_definition_id               = (known after apply)
      [32m+[0m[0m role_definition_name             = "Contributor"
      [32m+[0m[0m scope                            = (known after apply)
      [32m+[0m[0m skip_service_principal_aad_check = (known after apply)
    }

[1m  # azurerm_role_assignment.key_vault_reader[0m will be created
[0m  [32m+[0m[0m resource "azurerm_role_assignment" "key_vault_reader" {
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m name                             = (known after apply)
      [32m+[0m[0m principal_id                     = "9163f46d-82b8-4dd5-afc0-d9f912474a3d"
      [32m+[0m[0m principal_type                   = (known after apply)
      [32m+[0m[0m role_definition_id               = (known after apply)
      [32m+[0m[0m role_definition_name             = "Key Vault Reader"
      [32m+[0m[0m scope                            = (known after apply)
      [32m+[0m[0m skip_service_principal_aad_check = (known after apply)

      [32m+[0m[0m timeouts {
          [32m+[0m[0m create = "10m"
        }
    }

[1m  # azurerm_role_assignment.synapse_rbac[0m will be created
[0m  [32m+[0m[0m resource "azurerm_role_assignment" "synapse_rbac" {
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m name                             = (known after apply)
      [32m+[0m[0m principal_id                     = "9163f46d-82b8-4dd5-afc0-d9f912474a3d"
      [32m+[0m[0m principal_type                   = (known after apply)
      [32m+[0m[0m role_definition_id               = (known after apply)
      [32m+[0m[0m role_definition_name             = "Synapse Administrator"
      [32m+[0m[0m scope                            = (known after apply)
      [32m+[0m[0m skip_service_principal_aad_check = (known after apply)
    }

[1m  # azurerm_storage_account.storage[0m will be created
[0m  [32m+[0m[0m resource "azurerm_storage_account" "storage" {
      [32m+[0m[0m access_tier                       = (known after apply)
      [32m+[0m[0m account_kind                      = "StorageV2"
      [32m+[0m[0m account_replication_type          = "LRS"
      [32m+[0m[0m account_tier                      = "Standard"
      [32m+[0m[0m allow_nested_items_to_be_public   = true
      [32m+[0m[0m cross_tenant_replication_enabled  = true
      [32m+[0m[0m default_to_oauth_authentication   = false
      [32m+[0m[0m enable_https_traffic_only         = true
      [32m+[0m[0m id                                = (known after apply)
      [32m+[0m[0m infrastructure_encryption_enabled = false
      [32m+[0m[0m is_hns_enabled                    = true
      [32m+[0m[0m large_file_share_enabled          = (known after apply)
      [32m+[0m[0m location                          = "westeurope"
      [32m+[0m[0m min_tls_version                   = "TLS1_2"
      [32m+[0m[0m name                              = "azuredatainfra"
      [32m+[0m[0m nfsv3_enabled                     = false
      [32m+[0m[0m primary_access_key                = (sensitive value)
      [32m+[0m[0m primary_blob_connection_string    = (sensitive value)
      [32m+[0m[0m primary_blob_endpoint             = (known after apply)
      [32m+[0m[0m primary_blob_host                 = (known after apply)
      [32m+[0m[0m primary_connection_string         = (sensitive value)
      [32m+[0m[0m primary_dfs_endpoint              = (known after apply)
      [32m+[0m[0m primary_dfs_host                  = (known after apply)
      [32m+[0m[0m primary_file_endpoint             = (known after apply)
      [32m+[0m[0m primary_file_host                 = (known after apply)
      [32m+[0m[0m primary_location                  = (known after apply)
      [32m+[0m[0m primary_queue_endpoint            = (known after apply)
      [32m+[0m[0m primary_queue_host                = (known after apply)
      [32m+[0m[0m primary_table_endpoint            = (known after apply)
      [32m+[0m[0m primary_table_host                = (known after apply)
      [32m+[0m[0m primary_web_endpoint              = (known after apply)
      [32m+[0m[0m primary_web_host                  = (known after apply)
      [32m+[0m[0m public_network_access_enabled     = true
      [32m+[0m[0m queue_encryption_key_type         = "Service"
      [32m+[0m[0m resource_group_name               = "rg-azure-data-infra"
      [32m+[0m[0m secondary_access_key              = (sensitive value)
      [32m+[0m[0m secondary_blob_connection_string  = (sensitive value)
      [32m+[0m[0m secondary_blob_endpoint           = (known after apply)
      [32m+[0m[0m secondary_blob_host               = (known after apply)
      [32m+[0m[0m secondary_connection_string       = (sensitive value)
      [32m+[0m[0m secondary_dfs_endpoint            = (known after apply)
      [32m+[0m[0m secondary_dfs_host                = (known after apply)
      [32m+[0m[0m secondary_file_endpoint           = (known after apply)
      [32m+[0m[0m secondary_file_host               = (known after apply)
      [32m+[0m[0m secondary_location                = (known after apply)
      [32m+[0m[0m secondary_queue_endpoint          = (known after apply)
      [32m+[0m[0m secondary_queue_host              = (known after apply)
      [32m+[0m[0m secondary_table_endpoint          = (known after apply)
      [32m+[0m[0m secondary_table_host              = (known after apply)
      [32m+[0m[0m secondary_web_endpoint            = (known after apply)
      [32m+[0m[0m secondary_web_host                = (known after apply)
      [32m+[0m[0m sftp_enabled                      = false
      [32m+[0m[0m shared_access_key_enabled         = true
      [32m+[0m[0m table_encryption_key_type         = "Service"
      [32m+[0m[0m tags                              = {
          [32m+[0m[0m "Environment" = "Production"
          [32m+[0m[0m "Owner"       = "Azure Data Infra Project"
        }

      [32m+[0m[0m blob_properties (known after apply)

      [32m+[0m[0m network_rules (known after apply)

      [32m+[0m[0m queue_properties (known after apply)

      [32m+[0m[0m routing (known after apply)

      [32m+[0m[0m share_properties (known after apply)
    }

[1m  # azurerm_storage_blob.data_blob[0m will be created
[0m  [32m+[0m[0m resource "azurerm_storage_blob" "data_blob" {
      [32m+[0m[0m access_tier            = (known after apply)
      [32m+[0m[0m content_type           = "application/octet-stream"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m metadata               = (known after apply)
      [32m+[0m[0m name                   = "data-blob"
      [32m+[0m[0m parallelism            = 8
      [32m+[0m[0m size                   = 0
      [32m+[0m[0m source_content         = "Hello, this is a test file!"
      [32m+[0m[0m storage_account_name   = "azuredatainfra"
      [32m+[0m[0m storage_container_name = "data-container"
      [32m+[0m[0m type                   = "Block"
      [32m+[0m[0m url                    = (known after apply)
    }

[1m  # azurerm_storage_container.data_container[0m will be created
[0m  [32m+[0m[0m resource "azurerm_storage_container" "data_container" {
      [32m+[0m[0m container_access_type   = "private"
      [32m+[0m[0m has_immutability_policy = (known after apply)
      [32m+[0m[0m has_legal_hold          = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m metadata                = (known after apply)
      [32m+[0m[0m name                    = "data-container"
      [32m+[0m[0m resource_manager_id     = (known after apply)
      [32m+[0m[0m storage_account_name    = "azuredatainfra"
    }

[1m  # azurerm_storage_data_lake_gen2_filesystem.data_lake_filesystem[0m will be created
[0m  [32m+[0m[0m resource "azurerm_storage_data_lake_gen2_filesystem" "data_lake_filesystem" {
      [32m+[0m[0m group              = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "datalake-filesystem"
      [32m+[0m[0m owner              = (known after apply)
      [32m+[0m[0m storage_account_id = (known after apply)

      [32m+[0m[0m ace (known after apply)
    }

[1m  # azurerm_subnet.bastion_subnet[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "bastion_subnet" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.0.4.0/24",
        ]
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "AzureBastionSubnet"
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "rg-azure-data-infra"
      [32m+[0m[0m virtual_network_name                           = "VNet-Project"
    }

[1m  # azurerm_subnet.databricks[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "databricks" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.0.3.0/24",
        ]
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "Databricks-Subnet"
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "rg-azure-data-infra"
      [32m+[0m[0m virtual_network_name                           = "VNet-Project"
    }

[1m  # azurerm_subnet.private[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "private" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.0.2.0/24",
        ]
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "Private-Subnet"
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "rg-azure-data-infra"
      [32m+[0m[0m virtual_network_name                           = "VNet-Project"
    }

[1m  # azurerm_subnet.public[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "public" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.0.1.0/24",
        ]
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "Public-Subnet"
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "rg-azure-data-infra"
      [32m+[0m[0m virtual_network_name                           = "VNet-Project"
    }

[1m  # azurerm_subnet_nat_gateway_association.databricks_nat_assoc[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet_nat_gateway_association" "databricks_nat_assoc" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m nat_gateway_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # azurerm_subnet_nat_gateway_association.private_nat_assoc[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet_nat_gateway_association" "private_nat_assoc" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m nat_gateway_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # azurerm_subnet_network_security_group_association.nsg_public_assoc[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet_network_security_group_association" "nsg_public_assoc" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m network_security_group_id = (known after apply)
      [32m+[0m[0m subnet_id                 = (known after apply)
    }

[1m  # azurerm_synapse_sql_pool.sql_pool[0m will be created
[0m  [32m+[0m[0m resource "azurerm_synapse_sql_pool" "sql_pool" {
      [32m+[0m[0m collation                 = (known after apply)
      [32m+[0m[0m create_mode               = "Default"
      [32m+[0m[0m geo_backup_policy_enabled = true
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m name                      = "synapse_sql_pool"
      [32m+[0m[0m sku_name                  = "DW100c"
      [32m+[0m[0m synapse_workspace_id      = (known after apply)
    }

[1m  # azurerm_synapse_workspace.synapse_workspace[0m will be created
[0m  [32m+[0m[0m resource "azurerm_synapse_workspace" "synapse_workspace" {
      [32m+[0m[0m aad_admin                            = (known after apply)
      [32m+[0m[0m connectivity_endpoints               = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m location                             = "westeurope"
      [32m+[0m[0m managed_resource_group_name          = (known after apply)
      [32m+[0m[0m name                                 = (known after apply)
      [32m+[0m[0m public_network_access_enabled        = true
      [32m+[0m[0m resource_group_name                  = "rg-azure-data-infra"
      [32m+[0m[0m sql_aad_admin                        = (known after apply)
      [32m+[0m[0m sql_administrator_login              = "adminuser"
      [32m+[0m[0m sql_administrator_login_password     = (sensitive value)
      [32m+[0m[0m storage_data_lake_gen2_filesystem_id = (known after apply)

      [32m+[0m[0m identity {
          [32m+[0m[0m principal_id = (known after apply)
          [32m+[0m[0m tenant_id    = (known after apply)
          [32m+[0m[0m type         = "SystemAssigned"
        }
    }

[1m  # azurerm_virtual_network.vnet[0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_network" "vnet" {
      [32m+[0m[0m address_space       = [
          [32m+[0m[0m "10.0.0.0/16",
        ]
      [32m+[0m[0m dns_servers         = (known after apply)
      [32m+[0m[0m guid                = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "westeurope"
      [32m+[0m[0m name                = "VNet-Project"
      [32m+[0m[0m resource_group_name = "rg-azure-data-infra"
      [32m+[0m[0m subnet              = (known after apply)
    }

[1m  # null_resource.add_principal_to_admins[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "add_principal_to_admins" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # null_resource.create_databricks_cluster[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "create_databricks_cluster" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # null_resource.enable_public_access[0m will be created
[0m  [32m+[0m[0m resource "null_resource" "enable_public_access" {
      [32m+[0m[0m id = (known after apply)
    }

[1m  # random_password.synapse_sql_password[0m will be created
[0m  [32m+[0m[0m resource "random_password" "synapse_sql_password" {
      [32m+[0m[0m bcrypt_hash = (sensitive value)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 16
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (sensitive value)
      [32m+[0m[0m special     = true
      [32m+[0m[0m upper       = true
    }

[1m  # random_string.suffix[0m will be created
[0m  [32m+[0m[0m resource "random_string" "suffix" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 8
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (known after apply)
      [32m+[0m[0m special     = false
      [32m+[0m[0m upper       = true
    }

[1m  # random_string.suffix_analytics[0m will be created
[0m  [32m+[0m[0m resource "random_string" "suffix_analytics" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 6
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (known after apply)
      [32m+[0m[0m special     = false
      [32m+[0m[0m upper       = false
    }

[1m  # random_string.suffix_processing[0m will be created
[0m  [32m+[0m[0m resource "random_string" "suffix_processing" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m length      = 6
      [32m+[0m[0m lower       = true
      [32m+[0m[0m min_lower   = 0
      [32m+[0m[0m min_numeric = 0
      [32m+[0m[0m min_special = 0
      [32m+[0m[0m min_upper   = 0
      [32m+[0m[0m number      = true
      [32m+[0m[0m numeric     = true
      [32m+[0m[0m result      = (known after apply)
      [32m+[0m[0m special     = false
      [32m+[0m[0m upper       = false
    }

[1mPlan:[0m 54 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m databricks_workspace_url = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
